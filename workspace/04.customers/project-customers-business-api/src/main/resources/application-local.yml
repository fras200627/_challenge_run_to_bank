#########################################################
server:
  port: ${CUSTOMERS_BUSINESS_INTERNAL_PORT:0}
  error:
    include-message: always
    #include-binding-errors: always
    include-stacktrace: never
    include-exception: false

#########################################################
app:
  environment: ${API_ENVIRONMENT:local}
  app_info:
    name: API Customers Business Services
    title: Project API Customers Business Services
    version: ${API_VERSION:Snapshot-0.0.1}
    build: ${API_BUILD:v.2024}

#########################################################    
spring:
  application:
    name: customers-business-api
  security:
    filter:
      dispatcher-types: request
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://${API_GATEWAY_HOST_NAME:localhost}:${API_GATEWAY_EXPOSE_PORT:3001}/authentication-server
  cloud:
    openfeign:
      client:
        config:
          feignName:
            url: http://${API_GATEWAY_HOST_NAME:localhost}:${API_GATEWAY_EXPOSE_PORT:3001}/
            connectTimeout: 50
            readTimeout: 50
            loggerLevel: full
            dismiss404: false
            micrometer.enabled: false
  datasource:
    url: jdbc:h2:file:./workspace/00.database.h2/data/db_customers;MODE=MYSQL;AUTO_SERVER=TRUE;
    driverClassName: org.h2.Driver
    username: sa
    password: 123456
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  flyway:
    baseline-description: true
    baseline-on-migrate: true
    create-schemas: true
    default-schema: public
    enabled: true
    locations: classpath:db/migration/ModeMySQL
    schemas: public
    validate-on-migrate: true
  h2:
    console:
      enabled: true
      path: /h2-console
      settings.trace: false
      settings.web-allow-others: false
  data:
    web:
      pageable:
        page-parameter: page
        size-parameter: size
      sort:
        sort-parameter: sort
        
#########################################################
eureka:
  instance:
    hostname: service-discovery
    instance-id: ${spring.application.name}:${random.int}
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: http://${SERVICE_DISCOVERY_HOST_NAME:localhost}:${SERVICE_DISCOVERY_EXPOSE_PORT:3000}/eureka

#########################################################
resilience4j:
  circuitBreaker:
    instances:
      customersBusiness:
        waitDurationInOpenState: 50s
        minimumNumberOfCalls: 2
        slidingWindowSize: 3

#########################################################     
logging:
  level:
    com:
      challenge: ${API_LOGGING_LEVEL:error}
    org:
      springframework: ${API_LOGGING_LEVEL:error}

######################################################### 